openapi: 3.0.3
info:
  title: Projeto para Museu Nacional Soares dos Reis
  description: |-
    A API para a aplicação dedicada ao Museu Nacional Soares dos Reis
  version: 1.0.0
  contact:
    email: 12997@ismt.pt
servers:
  - url: http://localhost:5000/api/v1
    description: Servidor local
security:
  - bearerAuth: []

tags:
  - name: estudantes
    description: Dados dos estudantes

  - name: escolas
    description: Dados das escolas

  - name: respostas
    description: Dados das perguntas

  - name: tentativas
    description: Dados das tentativas de cada estudante

  - name: eventos
    description: Dados sobre o evento das visitas

  - name: perguntas
    description: Dados das perguntas

  - name: pergunta-resposta
    description: Dados das respostas das perguntas

  - name: desafios
    description: Dados dos desafios

  - name: desafio-perguntas
    description: Dados sobre quais perguntas pertencem a quais desafios

  - name: ranking_evento_estudantes
    description: Dados do ranking dos estudantes no evento

  - name: ranking_global_escolas
    description: Dados do ranking de escolas globalmente

  - name: ranking_global_estudantes
    description: Dados do ranking global de estudantes

  - name: auth
    description: Dados de autênticação

paths:
  /estudante:
    post:
      tags:
        - estudantes
      summary: Cria um novo estudante
      operationId: createStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Estudante"
      responses:
        "201":
          description: estudante criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Estudante"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /estudante/{id}:
    get:
      tags:
        - estudantes
      summary: Retorna um estudante pelo ID
      operationId: getStudentById
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante a ser retornado
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: estudante encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Estudante"
        "404":
          description: estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    put:
      tags:
        - estudantes
      summary: Atualiza um estudante pelo ID
      operationId: updateStudent
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante a ser atualizado
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Estudante"
      responses:
        "200":
          description: estudante atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Estudante"
        "404":
          description: estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    delete:
      tags:
        - estudantes
      summary: Remove um estudante pelo ID
      operationId: deleteStudent
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante a ser removido
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "204":
          description: estudante removido com sucesso
        "404":
          description: estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /estudante/{nome}:
    get:
      tags:
        - estudantes
      summary: Retorna um estudante pelo ID
      operationId: getStudentByName
      parameters:
        - in: path
          name: nome
          required: true
          description: Nome do estudante a ser retornado
          schema:
            type: string
            minLength: 2
      responses:
        "200":
          description: estudante encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Estudante"
        "404":
          description: estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /estudante/{id}/escola:
    get:
      tags:
        - estudantes
      summary: Retorna as escolas em que este estudante esteve inscrito
      operationId: getStudentSchool
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Lista de escolas do estudante
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Estudante"
        "404":
          description: Estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /estudante/{id}/ranking-evento:
    get:
      tags:
        - estudantes
      summary: Retorna o ranking do estudante num evento
      operationId: getStudantEventRanking
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ranking do estudante num evento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Estudante"
        "404":
          description: Estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /estudante/{id}/ranking-global:
    post:
      tags:
        - ranking_global_estudantes
      summary: Cria o ranking do estudante globalmente
      operationId: createGlobalStudentRanking
      parameters:
        - in: path
          name: id
          required: true
          description: ID do aluno com o ranking global
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ranking_global_estudantes"
      responses:
        "201":
          description: Resposta criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ranking_global_estudantes"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    get:
      tags:
        - estudantes
      summary: Retorna o ranking global do estudante
      operationId: getStudantGlobalRanking
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ranking global do estudante
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Estudante"
        "404":
          description: Estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    put:
      tags:
        - ranking_global_estudantes
      summary: Atualiza o ranking global de um estudante
      operationId: updateGlobalRankStudent
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante cujo Rank vai ser atualizado
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ranking_global_estudantes"
      responses:
        "200":
          description: ranking global do estudante atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ranking_global_estudantes"
        "404":
          description: estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    delete:
      tags:
        - ranking_global_estudantes
      summary: Remove o ranking global do estudante pelo ID
      operationId: deleteGlobalRankStudent
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante cujo rank vai ser removido
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "204":
          description: ranking do estudante removido com sucesso
        "404":
          description: estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /estudante/ranking-global:
    get:
      tags:
        - ranking_global_estudantes
      summary: Retorna o ranking global de todos os estudantes
      operationId: getGlobalStudentRanking
      responses:
        "200":
          description: Ranking de esutdantes globalmente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ranking_global_estudantes"
        "404":
          description: Estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /estudante/{id}/tentativa:
    post:
      tags:
        - tentativas
      summary: Cria uma nova tentativa de resposta por um estudante
      operationId: createAttempt
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante cuja tentativa vai ser criada
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tentativa"
      responses:
        "201":
          description: estudante criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tentativa"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    get:
      tags:
        - tentativas
      summary: Retorna as tentativas do estudante a responder a perguntas
      operationId: getStudantAttempts
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ranking global do estudante
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Estudante"
        "404":
          description: Estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /estudante/{id}/evento/pontuação:
    get:
      tags:
        - tentativas
      summary: Retorna a pontuação total das perguntas que o estudante respondeu corretamente
      operationId: getStudantEventPoints
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Pontuação total do estudante
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tentativa"
        "404":
          description: Estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /escola/{id}/global/pontuação:
    get:
      tags:
        - tentativas
      summary: Retorna a pontuação total de todos os alunos da escola
      operationId: getSchoolTotalPoints
      parameters:
        - in: path
          name: id
          required: true
          description: ID da escola
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Pontuação da escola
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tentativa"
        "404":
          description: Escola não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /estudante/{id}/tentativas/{id_tentativa}:
    put:
      tags:
        - tentativas
      summary: Atualiza uma tentativa do estudante estudante pelo ID
      operationId: updateAttempt
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante
          schema:
            type: integer
            format: int64
            minimum: 1
        - in: path
          name: id_tentativa
          required: true
          description: ID da tentativa a ser removida
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tentativa"
      responses:
        "200":
          description: estudante atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tentativa"
        "404":
          description: estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    delete:
      tags:
        - tentativas
      summary: Remove uma tentativa do estudante a responder a uma pergunta pelo ID
      operationId: deleteAttempt
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante
          schema:
            type: integer
            format: int64
            minimum: 1
        - in: path
          name: id_tentativa
          required: true
          description: ID da tentativa a ser removida
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "204":
          description: estudante removido com sucesso
        "404":
          description: estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /escola:
    post:
      tags:
        - escolas
      summary: Cria uma nova escola
      operationId: createSchool
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Escola"
      responses:
        "201":
          description: escola criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Escola"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /escola/{id}:
    get:
      tags:
        - escolas
      summary: Retorna um escola pelo ID
      operationId: getSchoolByID
      parameters:
        - in: path
          name: id
          required: true
          description: ID da escola a ser retornado
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: escola encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Escola"
        "404":
          description: escola não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    put:
      tags:
        - escolas
      summary: Atualiza uma escola pelo ID
      operationId: updateSchool
      parameters:
        - in: path
          name: id
          required: true
          description: ID da escola a ser atualizada
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Escola"
      responses:
        "200":
          description: escola atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Escola"
        "404":
          description: escola não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    delete:
      tags:
        - escolas
      summary: Remove uma escola pelo ID
      operationId: deleteSchool
      parameters:
        - in: path
          name: id
          required: true
          description: ID da escola a ser removida
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "204":
          description: escola removida com sucesso
        "404":
          description: escola não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /escola/{nome}:
    get:
      tags:
        - escolas
      summary: Retorna uma escola pelo ID
      operationId: getSchoolByName
      parameters:
        - in: path
          name: nome
          required: true
          description: Nome da escola a ser retornada
          schema:
            type: string
            minLength: 2
      responses:
        "200":
          description: escola encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Escola"
        "404":
          description: escola não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /escola/{id}/estudantes:
    get:
      tags:
        - escolas
      summary: Retorna os estudantes inscritos na escola
      operationId: getSchoolStudents
      parameters:
        - in: path
          name: id
          required: true
          description: ID da escola
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Lista de estudantes da escola
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Escola"
        "404":
          description: Escola não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /escola/{id}/ranking-global:
    get:
      tags:
        - ranking_global_escolas
      summary: Retorna o ranking global da escola
      operationId: getSchoolRanking
      parameters:
        - in: path
          name: id
          required: true
          description: ID da escola
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ranking global da escola
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ranking_global_escolas"
        "404":
          description: Escola não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /escolas/ranking-global:
    post:
      tags:
        - ranking_global_escolas
      summary: Cria o ranking de uma nova escola
      operationId: createSchoolRanking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ranking_global_escolas"
      responses:
        "201":
          description: escola criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ranking_global_escolas"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    get:
      tags:
        - ranking_global_escolas
      summary: Retorna o ranking global de todas as escolas
      operationId: getAllSchoolRanking
      responses:
        "200":
          description: Ranking global de todas as escolas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ranking_global_escolas"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /escola/ranking-global/{id}:
    put:
      tags:
        - ranking_global_escolas
      summary: Atualiza o ranking de uma escola
      operationId: updateSchoolRanking
      parameters:
        - in: path
          name: id
          required: true
          description: ID do ranking global de escola a ser atualizada
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ranking_global_escolas"
      responses:
        "200":
          description: ranking da escola atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ranking_global_escolas"
        "404":
          description: ranking da escola não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    delete:
      tags:
        - ranking_global_escolas
      summary: Remove o ranking de uma escola pelo ID
      operationId: deleteSchoolRanking
      parameters:
        - in: path
          name: id
          required: true
          description: ID do ranking da escola a ser removida
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "204":
          description: ranking da escola removido com sucesso
        "404":
          description: ranking da escola não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /evento:
    post:
      tags:
        - eventos
      summary: Cria um novo evento
      operationId: createEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Evento"
      responses:
        "201":
          description: evento criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Evento"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /evento/{id}:
    get:
      tags:
        - eventos
      summary: Retorna um eveton pelo ID
      operationId: getEventByID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do evento a ser retornado
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: evento encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Evento"
        "404":
          description: evento não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    put:
      tags:
        - eventos
      summary: Atualiza um evento pelo ID
      operationId: updateEvent
      parameters:
        - in: path
          name: id
          required: true
          description: ID do evento a ser atualizado
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Evento"
      responses:
        "200":
          description: evento atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Evento"
        "404":
          description: evento não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    delete:
      tags:
        - eventos
      summary: Remove um evento pelo ID
      operationId: deleteEvent
      parameters:
        - in: path
          name: id
          required: true
          description: ID do evento a ser removido
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "204":
          description: evento removido com sucesso
        "404":
          description: evento não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /evento/{id}/desafio:
    get:
      tags:
        - eventos
      summary: Retorna o desafio relacionado a este evento
      operationId: getChallengeOfEvent
      parameters:
        - in: path
          name: id
          required: true
          description: ID do evento
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Perguntas do desafio do evento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Evento"
        "404":
          description: Evento não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /evento/{id}/desafio-perguntas:
    get:
      tags:
        - eventos
      summary: Retorna as perguntas e as suas respostas do desafio relacionado a este evento
      operationId: getQuestionsForEvent
      parameters:
        - in: path
          name: id
          required: true
          description: ID do evento
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Desafio do evento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Evento"
        "404":
          description: Evento não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /evento/{id}/ranking-evento:
    post:
      tags:
        - ranking_evento_estudantes
      summary: Cria um novo ranking de estudante para o evento
      operationId: createEventRanking
      parameters:
        - in: path
          name: id
          required: true
          description: ID do evento cujo ranking queremos obter
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ranking_evento_estudantes"
      responses:
        "201":
          description: evento criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ranking_evento_estudantes"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    get:
      tags:
        - ranking_evento_estudantes
      summary: Retorna o ranking de todos alunos no evento
      operationId: getEventRanking
      parameters:
        - in: path
          name: id
          required: true
          description: ID do evento
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Ranking do evento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ranking_evento_estudantes"
        "404":
          description: Escola não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /evento/ranking-evento/{id}:
    put:
      tags:
        - ranking_evento_estudantes
      summary: Atualiza um ranking pelo id
      operationId: updateEventRanking
      parameters:
        - in: path
          name: id
          required: true
          description: ID do ranking do evento a ser atualizado
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Ranking_evento_estudantes"
      responses:
        "200":
          description: evento atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ranking_evento_estudantes"
        "404":
          description: evento não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    delete:
      tags:
        - ranking_evento_estudantes
      summary: Remove um ranking do evento
      operationId: deleteEventRanking
      parameters:
        - in: path
          name: id
          required: true
          description: ID do ranking do evento a ser removido
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "204":
          description: ranking do evento removido com sucesso
        "404":
          description: ranking do evento não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /evento/{id}/estudantes:
    get:
      tags:
        - eventos
      summary: Retorna os estudantes participantes do evento
      operationId: getEventStudents
      parameters:
        - in: path
          name: id
          required: true
          description: ID do evento
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Estudantes a participar no evento
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Estudante"
        "404":
          description: Escola não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /evento/entrar:
    post:
      tags:
        - evento
      summary: Entrar via o código qr fornecido pelo utilizador
      security: []  
      requestBody:
        description: Código qr para o evento
        content:
          application/json:
            schema:
              type: object
              properties:
                codigo_qr:
                  type: string
                  format: string
      responses:
        '200':
          description: Autenticação com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evento'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /desafio:
    post:
      tags:
        - desafios
      summary: Cria um novo desafio
      operationId: createChallenge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Desafio"
      responses:
        "201":
          description: desafio criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Desafio"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /desafio/{id}:
    get:
      tags:
        - desafios
      summary: Retorna um desafio pelo ID
      operationId: getChallengeByID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do desafio a ser retornado
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: desafio encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Desafio"
        "404":
          description: desafio não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    put:
      tags:
        - desafios
      summary: Atualiza um desafio pelo ID
      operationId: updateChallenge
      parameters:
        - in: path
          name: id
          required: true
          description: ID do desafio a ser atualizado
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Desafio"
      responses:
        "200":
          description: desafio atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Desafio"
        "404":
          description: desafio não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    delete:
      tags:
        - desafios
      summary: Remove um desafio pelo ID
      operationId: deleteChallenge
      parameters:
        - in: path
          name: id
          required: true
          description: ID do desafio a ser removido
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "204":
          description: desafio removido com sucesso
        "404":
          description: desafio não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /desafio/{id}/perguntas:
    get:
      tags:
        - desafio-perguntas
      summary: Retorna as perguntas associadas ao desafio com o respetivo ID
      operationId: getChallengeQuestions
      parameters:
        - in: path
          name: id
          required: true
          description: ID do desafio a ser retornado
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: Perguntas do desafio encontradas
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DesafioPergunta"
        "404":
          description: desafio não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /pergunta:
    post:
      tags:
        - perguntas
      summary: Cria uma nova pergunta
      operationId: createQuestion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pergunta"
      responses:
        "201":
          description: Pergunta criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pergunta"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /pergunta/{id}:
    get:
      tags:
        - perguntas
      summary: Retorna uma pergunta pelo ID
      operationId: getQuestionByID
      parameters:
        - in: path
          name: id
          required: true
          description: ID da pergunta a ser retornado
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: pergunta encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pergunta"
        "404":
          description: pergunta não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    put:
      tags:
        - perguntas
      summary: Atualiza uma pergunta pelo ID
      operationId: updateQuestion
      parameters:
        - in: path
          name: id
          required: true
          description: ID da pergunta a ser atualizada
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pergunta"
      responses:
        "200":
          description: pergunta atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pergunta"
        "404":
          description: pergunta não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    delete:
      tags:
        - perguntas
      summary: Remove uma pergunta pelo ID
      operationId: deleteQuestion
      parameters:
        - in: path
          name: id
          required: true
          description: ID da pergunta a ser removida
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "204":
          description: pergunta removida com sucesso
        "404":
          description: pergunta não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /pergunta/{id}/respostas:
    get:
      tags:
        - pergunta-resposta
      summary: Retorna as respostas a esta pergunta
      operationId: getQuestionAnswers
      parameters:
        - in: path
          name: id
          required: true
          description: ID da pergunta a ser retornada
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: Respoastas para a pergunta encontradas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PerguntaResposta"
        "404":
          description: pergunta não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    post:
      tags:
        - respostas
      summary: Cria uma resposta nova para a pergunta
      operationId: createAnswer
      parameters:
        - in: path
          name: id
          required: true
          description: ID da pergunta para a qual queremos adicionar uma resposta
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Resposta"
      responses:
        "201":
          description: Resposta criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resposta"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /pergunta/respostas/{id}:
    get:
      tags:
        - respostas
      summary: Retorna uma resposta
      operationId: getAnswer
      parameters:
        - in: path
          name: id
          required: true
          description: ID da resposta a ser retornada
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: Respoasta encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resposta"
        "404":
          description: resposta não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    put:
      tags:
        - respostas
      summary: Atualiza uma resposta
      operationId: updateAnswer
      parameters:
        - in: path
          name: id
          required: true
          description: ID da resposta a ser atualizada
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Resposta"
      responses:
        "200":
          description: resposta atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resposta"
        "404":
          description: resposta não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    delete:
      tags:
        - respostas
      summary: Remove uma resposta pelo ID
      operationId: deleteAnswer
      parameters:
        - in: path
          name: id
          required: true
          description: ID da resposta a ser removida
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "204":
          description: resposta removida com sucesso
        "404":
          description: resposta não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /logout:
    delete:
      tags:
        - auth
      summary: Logout do utilizador
      parameters:
        - name: token
          in: header
          description: token de acesso atual
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Logout realizado com sucesso
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /login:
    post:
      tags:
        - auth
      summary: Autenticação do utilizador
      security: []
      requestBody:
        description: Dados de autenticação do utilizador
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: string
                password:
                  type: string
                  format: string
      responses:
        "200":
          description: Autenticação com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Auth"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /refreshToken:
    post:
      tags:
        - auth
      summary: Reinicia o tempo útil do token
      parameters:
        - name: token
          in: header
          description: refresh token
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Renovação do token realizada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  AccessToken:
                    type: string
                    format: string
        "404":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  /register:
    post:
      tags:
        - auth
      summary: Registo de um novo utilizador
      security: []
      requestBody:
        description: Dados do utilizador
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  format: string
                email:
                  type: string
                  format: string
                password:
                  type: string
                  format: string
        required: true
      responses:
        "200":
          description: Utilizador registado com sucesso
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Estudante:
      required:
        - id
        - nome
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Chave primária para estudantes
          example: 1
        nome:
          type: string
          description: Nome do estudante
          example: Joana Silva
          minLength: 2
        id_evento:
          type: array
          description: Chave priméria do evento em que o estudante participou
          items:
            $ref: "#/components/schemas/Evento"
        createdAt:
          type: string
          format: date-time
          example: "2025-04-20T09:15:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-10T12:00:00Z"

    Escola:
      required:
        - id
        - nome
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Chave primária para escolas
          example: 1
        nome:
          type: string
          description: Nome da escola
          example: Escola Secundária de Lisboa
        createdAt:
          type: string
          format: date-time
          example: "2025-05-01T08:30:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-10T14:45:00Z"

    Evento:
      required:
        - id
        - nome
        - codigo_qr
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Chave primária para cada evento
          example: 1
        id_escola:
          type: array
          description: O id das escolas que participaram no evento
          items:
            $ref: "#/components/schemas/Escola"
        id_desafio:
          type: integer
          format: int64
          description: O id do desafio relacionado a este evento
          items:
            $ref: "#/components/schemas/Desafio"
        nome:
          type: string
          description: Nome do evento
          example: A pintura surrealista
        codigo_qr:
          type: string
          description: Código necessário para aceder ao evento
          example: 1jok90jnmkl099
        data_evento:
          type: string
          format: date
          example: "2025-06-15"
        createdAt:
          type: string
          format: date-time
          example: "2025-05-10T10:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-12T12:30:00Z"

    Desafio:
      required:
        - id
        - nome
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Chave primária para cada desafio
          example: 1
        nome:
          type: string
          description: Nome do desafio
          example: Tudo sobre as pinturas surrealistas
        descricao:
          type: string
          description: Descrição do desfio
          example: Este quiz possui perguntas sobre pinturas surrealistas do tempo 1856 a 1939
        createdAt:
          type: string
          format: date-time
          example: "2025-05-12T12:30:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-12T12:30:00Z"

    DesafioPergunta:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Chave primária para a tabela desfio-perguntas
          example: 1
        id_desafio:
          type: integer
          format: int64
          description: Id do desaifo ligado a essa pergunta
          items:
            $ref: "#/components/schemas/Desafio"
        id_pergunta:
          type: array
          description: Os ids das perguntas ligadas a este desafio
          items:
            $ref: "#/components/schemas/Pergunta"
        createdAt:
          type: string
          format: date-time
          example: "2025-05-16T10:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-16T10:05:00Z"

    Pergunta:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Chave primária para perguntas
          example: 1
        texto:
          type: string
          description: A pergunta escrita
          example: Qual foi o movimento artístico dominante no século XIX?
        pontos:
          type: integer
          format: int64
          description: Os pontos que um jogador ganha ao responder corretamente
          example: 10
        createdAt:
          type: string
          format: date-time
          example: "2025-05-01T08:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-02T09:30:00Z"

    PerguntaResposta:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Chave primária para pergunta-respostas
          example: 1
        id_pergunta:
          type: integer
          format: int64
          description: Id da pergunta a que estas respostas estão relacionadas
          items:
            $ref: "#/components/schemas/Pergunta"
        id_resposta:
          type: array
          description: Id das respostas relacionadas a esta pergunta
          items:
            $ref: "#/components/schemas/Pergunta"
        correta:
          type: array
          description: O id da(s) resposta(s) correta(s)
          items:
            $ref: "#/components/schemas/Pergunta"
        createdAt:
          type: string
          format: date-time
          example: "2025-05-10T14:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-12T10:45:00Z"

    Resposta:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: A chave primária da resposta
          example: 1
        texto:
          type: string
          description: O texto da resposta
          example: Naceu em 1982
        createdAt:
          type: string
          format: date-time
          example: "2025-05-10T14:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-12T10:45:00Z"

    Tentativa:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Chave primária para tentativas
          example: 1
        id_estudante:
          type: integer
          format: int64
          description: Id do estudante realcionado a esta tentativa
          items:
            $ref: "#/components/schemas/Estudante"
        id_pergunta:
          type: integer
          format: int64
          description: Id da pergunta que o estudante tentou acertar
          items:
            $ref: "#/components/schemas/Pergunta"
        id_resposta:
          type: integer
          format: int64
          description: Id da resposta que o estudante escolheu na sua tentativa
          items:
            $ref: "#/components/schemas/Resposta"
        id_evento:
          type: integer
          format: int64
          description: Id do evento em que o estudante respondeu
          items:
            $ref: "#/components/schemas/Evento"
        correta:
          type: boolean
          description: Propriedade que permite saber se o aluno respondeu corretamente ou incorretamente
        attemptedAt:
          type: string
          format: date-time
          example: "2025-05-12T10:45:00Z"

    Ranking_evento_estudantes:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Chave primária para o ranking dos estudantes num evento
          example: 1
        id_estudante:
          type: array
          description: Id dos alunos neste ranking
          items:
            $ref: "#/components/schemas/Estudante"
        id_evento:
          type: integer
          format: int64
          description: Id do evento
          items:
            $ref: "#/components/schemas/Evento"
        pontos:
          type: array
          description: Pontuação de cada aluno baseada nas respostas a que responderam corretamente nas suas tentativas
          items:
            $ref: "#/components/schemas/Tentativa"
        createdAt:
          type: string
          format: date-time
          example: "2025-05-10T14:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-12T10:45:00Z"

    Ranking_global_escolas:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Chave primária para o ranking das escolas globalmente
          example: 1
        id_escola:
          type: integer
          format: int64
          description: Id de todas as escolas com pontuação
          items:
            $ref: "#/components/schemas/Escola"
        pontos:
          type: integer
          format: int64
          description: Pontuação total da escola baseado na soma da pontuação dos seus alunos
          items:
            $ref: "#/components/schemas/Ranking_global_estudantes"
        createdAt:
          type: string
          format: date-time
          example: "2025-05-10T14:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-12T10:45:00Z"

    Ranking_global_estudantes:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Chave primária para o ranking de cada aluno globalmente
          example: 1
        id_estudante:
          type: integer
          format: int64
          description: Id do estudante com esta pontuação
          items:
            $ref: "#/components/schemas/Estudante"
        pontos:
          type: integer
          format: int64
          description: Pontuação de um estudante baseado em todos os eventos em que participou
          items:
            $ref: "#/components/schemas/Ranking_evento_estudantes"
        createdAt:
          type: string
          format: date-time
          example: "2025-05-10T14:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-05-12T10:45:00Z"

    Auth:
      type: object
      properties:
        AccessToken:
          type: string
          description: Token JWT de acesso
          example: eyJhbGciOiJIUzI1NiIsInR...
        RefreshToken:
          type: string
          description: Token de atualização para renovar o acesso
          example: dGhpcyByZWZyZXNoIHRva2Vu

    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
      example:
        message: Recurso não encontrado
        code: 404
